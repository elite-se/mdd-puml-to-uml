grammar elite.mdd.plantuml.PlantUML with org.eclipse.xtext.common.Terminals

generate plantUML "http://www.mdd.elite/plantuml/PlantUML"

Diagram:
	'@startuml' (elements+=SequenceElement)+ '@enduml';
	
SequenceElement:
	ParticipantDefinition
	| MessageDefinition;
	
// Participants
	
ParticipantDefinition:
	shape=ParticipantShape participant=Participant;
	
Participant:
	NamedParticipant
	| UnnamedParticipant
	| AnonymousParticipant
	| QuotedNamedParticipant
	| QuotedUnnamedParticipant
	| QuotedAnonymousParticipant
	;
	
NamedParticipant:
	label=ID ('['selector=ID']')? (':' type=ID)? ('ref' interactionIdent=ID ('strict')?)? 'as' name=ID 
;

UnnamedParticipant:
	// name=ID ('['selector=ID']')? (':' type=ID)? ('ref' interactionIdent=ID ('strict')?)?
	// Because of some weird problems in the serializer, static had to be removed in the unqouted version
	name=ID ('['selector=ID']')? (':' type=ID)? ('ref' interactionIdent=ID)?
;
AnonymousParticipant:
	':' type = ID ('ref' interactionIdent=ID ('strict')?)? 
;

// Quoted Version of the Participants
QuotedNamedParticipant:
	'"' label=ID ('['selector=ID']')? (':' type=ID)? ('ref' interactionIdent=ID ('strict')?)?
	'"' 'as' name=ID 
;

QuotedUnnamedParticipant:
	'"'name=ID ('['selector=ID']')? (':' type=ID)? ('ref' interactionIdent=ID ('strict')?)? '"'
;
QuotedAnonymousParticipant:
	'":' type = ID ('ref' interactionIdent=ID ('strict')?)?'"' 
;
	
enum ParticipantShape:
	ACTOR='actor' 
	| BOUNDARY='boundary' 
	| CONTROL='control' 
	| COLLECTIONS='collections' 
	| ENTITY='entity'
	| DATABASE='database'
	| PARTICIPANT='participant'
	;
	
// Messages
	
MessageDefinition:
	RequestMessageDefinition
	| ReplyMessageDefinition
	| FullQuotedRequestMessageDefinition
	| FullQuotedReplyMessageDefinition
	| LeftQuotedRequestMessageDefinition
	| LeftQuotedReplyMessageDefinition
	| RightQuotedRequestMessageDefinition
	| RightQuotedReplyMessageDefinition
	;
	
FullQuotedRequestMessageDefinition:
	('"' sender=[Participant] '"' arrow=(RightRequest) '"' receiver=[Participant] '"') (':' message=RequestMessage)
	| ('"'receiver=[Participant]'"' arrow=(LeftRequest) '"' sender=[Participant] '"') (':' message=RequestMessage)
	;
	
FullQuotedReplyMessageDefinition:
	('"' sender=[Participant] '"' arrow=RightReply '"' receiver=[Participant] '"') (':' message=ReplyMessage)
	| ('"' receiver=[Participant] '"' arrow=LeftReply '"' sender=[Participant] '"') (':' message=ReplyMessage)
	;
	
LeftQuotedRequestMessageDefinition:
	('"' sender=[Participant] '"' arrow=(RightRequest) receiver=[Participant]) (':' message=RequestMessage)
	| ('"' receiver=[Participant] '"' arrow=(LeftRequest) sender=[Participant]) (':' message=RequestMessage)
	;
	
LeftQuotedReplyMessageDefinition:
	('"' sender=[Participant] '"' arrow=RightReply  receiver=[Participant] ) (':' message=ReplyMessage)
	| ('"' receiver=[Participant] '"' arrow=LeftReply sender=[Participant] ) (':' message=ReplyMessage)
	;

RightQuotedRequestMessageDefinition:
	(sender=[Participant] arrow=(RightRequest) '"' receiver=[Participant] '"') (':' message=RequestMessage)
	| (receiver=[Participant] arrow=(LeftRequest) '"' sender=[Participant] '"') (':' message=RequestMessage)
	;
	
RightQuotedReplyMessageDefinition:
	(sender=[Participant] arrow=RightReply '"' receiver=[Participant] '"') (':' message=ReplyMessage)
	| (receiver=[Participant] arrow=LeftReply '"' sender=[Participant] '"') (':' message=ReplyMessage)
	;
	
RequestMessageDefinition:
	(sender=[Participant] arrow=(RightRequest) receiver=[Participant]) (':' message=RequestMessage)
	| (receiver=[Participant] arrow=(LeftRequest) sender=[Participant]) (':' message=RequestMessage)
	;
	
ReplyMessageDefinition:
	(sender=[Participant] arrow=RightReply receiver=[Participant]) (':' message=ReplyMessage)
	| (receiver=[Participant] arrow=LeftReply sender=[Participant]) (':' message=ReplyMessage)
	;
	
// TODO: Handle \"	
RequestMessage:
	name=ID ('('(arguments+=RequestMessageArgument (',' arguments+=RequestMessageArgument)*)?')')?;	

RequestMessageArgument:
	{RequestMessageArgument} INT
	| {RequestMessageArgument} STRING
	| name=ID "=" value=Value 
	;
	
ReplyMessage:
	{ReplyMessage} INT
	| {ReplyMessage} STRING
	| name=ID ('('(arguments+=ReplyMessageArgument (',' arguments+=ReplyMessageArgument)*)?')')?
	| variable=ID "=" name=ID ('('(arguments+=ReplyMessageArgument (',' arguments+=ReplyMessageArgument)*)?')')? (':' value=Value)?
	;
	
ReplyMessageArgument:
	{ReplyMessageArgument} INT
	| {ReplyMessageArgument} STRING
	| name=ID "=" value=Value
	| name=ID "=" outParam=ID ":" value=Value 
	;
	
Value:
	INT
	| STRING
	;
	
enum RequestArrow:
	RIGHT_SYNC
	| RIGHT_ASYNC
	| LEFT_SYNC
	| LEFT_ASYNC;

enum RightRequest returns RequestArrow:
	RIGHT_SYNC='->'
	| RIGHT_ASYNC='->>';

enum LeftRequest returns RequestArrow:
	LEFT_SYNC='<-'
	| LEFT_ASYNC='<<-';
	
enum ReplyArrow:
	RIGHT_REPLY
	| LEFT_REPLY;
	
enum RightReply returns ReplyArrow:
	RIGHT_REPLY='-->>';
	
enum LeftReply returns ReplyArrow:
	LEFT_REPLY='<<--'
;
	
// TODO: Handle Strings correctly
@Override 
terminal STRING:
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		;
	
	